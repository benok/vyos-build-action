name: VyOS v1.5 Rolling Release

on:
  push:
    branches:
      - master
  schedule:
    - cron: 0 3 * * *
  workflow_dispatch:

env:
  GIT_CLONE_URL: https://github.com/vyos/vyos-build
  BRANCH: current
  ARCHITECTURE: amd64
  BUILD_BY: vyos-build-action@github.com
  BUILD_TYPE: release
  VERSION: 1.5-rolling
  DEBIAN_MIRROR: http://ftp.us.debian.org/debian/
  VYOS_MIRROR: https://rolling-packages.vyos.net/current/

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: vyos/vyos-build:current
      options: --workdir /vyos --privileged
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: clone vyos-build
        run: git clone -b $BRANCH --single-branch $GIT_CLONE_URL vyos-build-test

      - name: Build iso
        working-directory: ./vyos-build-test
        run: |
          sudo make clean
          sudo ./build-vyos-image iso --architecture $ARCHITECTURE --build-by $BUILD_BY --build-type $BUILD_TYPE --version $VERSION --vyos-mirror $VYOS_MIRROR --custom-package vyos-1x-smoketest

      - name: Test iso
        working-directory: ./vyos-build-test
        run: |
          sudo make test
          sudo make testc
          sudo rm -rf vyos-build-test

  build:
    runs-on: ubuntu-latest
    container:
      image: vyos/vyos-build:current
      options: --workdir /vyos --privileged

    steps:
      - name: Clone source code
        run: git clone -b $BRANCH --single-branch $GIT_CLONE_URL

      - name: Build ISO
        working-directory: ./vyos-build
        run: |
          sudo make clean
          sudo ./build-vyos-image iso --architecture $ARCHITECTURE --build-by $BUILD_BY --build-type $BUILD_TYPE --version $VERSION-$(date +%Y%m%d%H%M) --vyos-mirror $VYOS_MIRROR

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso
          path: vyos-build/build/vyos-${{ env.VERSION }}-*.iso

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso
          path: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          asset=$(find ./vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso/ -name "vyos-${{ env.VERSION }}-*.iso" | xargs)
          tag_name="v${{ env.VERSION }}"
          gh release upload "$tag_name" "$asset"
  notificate:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Send Discord notification
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: 'failed to build vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso'
