name: VyOS v1.5 Rolling Release

on:
  push:
    branches:
      - master
  schedule:
    - cron: 0 3 * * *
  workflow_dispatch:

env:
  GIT_CLONE_URL: https://github.com/vyos/vyos-build
  BRANCH: current
  ARCHITECTURE: amd64
  BUILD_BY: vyos-build-action@github.com
  BUILD_TYPE: release
  VERSION: 1.5-rolling
  DEBIAN_MIRROR: http://ftp.us.debian.org/debian/
  VYOS_MIRROR: https://rolling-packages.vyos.net/current/

jobs:
  build_package:
    runs-on: ubuntu-latest
    steps:
      - name: Add Buildx
        uses: docker/setup-buildx-action@v2
      - name: Add qemu
        uses: docker/setup-qemu-action@v2
      - name: CheckOut
        uses: actions/checkout@v4.1.1
      - name: clone
        run: git clone https://github.com/vyos/vyos-1x
      - name: build
        run: |
          docker run --platform linux/amd64 --rm --privileged -v $(pwd):/vyos -w /vyos vyos/vyos-build:current bash -c "sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0 && sudo sysctl -w net.ipv6.conf.default.disable_ipv6=0 && sudo ip -6 addr add ::1 dev lo && cd vyos-1x && dpkg-buildpackage -uc -us -tc -b"
          docker run --platform linux/arm64 --rm --privileged -v $(pwd):/vyos -w /vyos vyos/vyos-build:current-arm64 bash -c "sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0 && sudo sysctl -w net.ipv6.conf.default.disable_ipv6=0 && sudo ip -6 addr add ::1 dev lo && cd vyos-1x && dpkg-buildpackage -uc -us -tc -b"
          ls -al ./vyos-1x*.deb
          pwd
          ls
          cd vyos-1x ; ls
  build_container:
    runs-on: ubuntu-latest
    steps:
      - name: Add Buildx
        uses: docker/setup-buildx-action@v2
      - name: Add qemu
        uses: docker/setup-qemu-action@v2
      - name: CheckOut
        uses: actions/checkout@v4.1.1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.0.0
        with:
          platforms: linux/amd64,linux/arm64
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: clone
        run: git clone -b $BRANCH --single-branch $GIT_CLONE_URL vyos-build
      - name: Build and Push to GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          context: ./vyos-build/docker
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/vyos-build-actions:${{ env.BRANCH }}
          labels: ${{ env.BRANCH }}

  test_amd64:
    # needs: build_container
    runs-on: ubuntu-latest
    steps:
      - name: Add Buildx
        uses: docker/setup-buildx-action@v2
      - name: Add qemu
        uses: docker/setup-qemu-action@v2
      - name: CheckOut
        uses: actions/checkout@v4.1.1
      - name: clone
        run: |
          git clone -b $BRANCH --single-branch $GIT_CLONE_URL vyos-build-test-amd64
          git clone -b $BRANCH --single-branch $GIT_CLONE_URL vyos-build-test
      - name: build iso
        run: |
          docker run --platform linux/amd64 --rm --privileged -v ./vyos-build-test-amd64/:/vyos -w /vyos vyos/vyos-build:current sudo --preserve-env ./build-vyos-image --architecture amd64 --build-by $BUILD_BY --vyos-mirror https://rolling-packages.vyos.net/current/ --debian-mirror http://deb.debian.org/debian/ --build-type $BUILD_TYPE --custom-package vyos-1x-smoketest --version "${VERSION}" iso
      - name: copy iso
        run: |
          mkdir -p ./vyos-build-test/build/
          cp ./vyos-build-test-amd64/build/live-image-amd64.hybrid.iso ./vyos-build-test/build/
      - name: Test iso
        run: |
          docker run --platform linux/amd64 --rm --privileged -v ~/vyos-build-test:/vyos -w /vyos vyos/vyos-build:current pwd
          docker run --platform linux/amd64 --rm --privileged -v ~/vyos-build-test:/vyos -w /vyos vyos/vyos-build:current ls
          docker run --platform linux/amd64 --rm --privileged -v ~/vyos-build-test:/vyos -w /vyos vyos/vyos-build:current sudo make test
          docker run --platform linux/amd64 --rm --privileged -v ~/vyos-build-test:/vyos -w /vyos vyos/vyos-build:current sudo make testc
          sudo rm -rf vyos-build-test
          sudo rm -rf vyos-build-test-amd64

  test_arm64:
    # needs: build_container
    runs-on: ubuntu-latest
    steps:
      - name: Add Buildx
        uses: docker/setup-buildx-action@v2
      - name: Add qemu
        uses: docker/setup-qemu-action@v2
      - name: CheckOut
        uses: actions/checkout@v4.1.1
      - name: clone
        run: |
          git clone -b $BRANCH --single-branch $GIT_CLONE_URL vyos-build-test-arm64
          git clone -b $BRANCH --single-branch $GIT_CLONE_URL vyos-build-test
      - name: build iso
        run: |
          docker run --platform linux/arm64 --rm --privileged -v ./vyos-build-test-arm64/:/vyos -w /vyos vyos/vyos-build:current-arm64 sudo --preserve-env ./build-vyos-image --architecture arm64 --build-by $BUILD_BY --vyos-mirror https://rolling-packages.vyos.net/current/ --debian-mirror http://deb.debian.org/debian/ --build-type $BUILD_TYPE --custom-package vyos-1x-smoketest --version "${VERSION}" iso
      - name: copy iso
        run: |
          mkdir -p ./vyos-build-test/build/
          cp ./vyos-build-test-arm64/build/live-image-arm64.hybrid.iso ./vyos-build-test/build/
      - name: Test iso
        run: |
          docker run --platform linux/arm64 --rm --privileged -v ~/vyos-build-test:/vyos -w /vyos vyos/vyos-build:current-arm64 sudo make test
          docker run --platform linux/arm64 --rm --privileged -v ~/vyos-build-test:/vyos -w /vyos vyos/vyos-build:current-arm64 sudo make testc
          sudo rm -rf vyos-build-test
          sudo rm -rf vyos-build-test-arm64

  build_amd64:
    needs: test_amd64
    runs-on: ubuntu-latest
    container:
      image: vyos/vyos-build:current
      options: --workdir /vyos --privileged

    steps:
      - name: Clone source code
        run: git clone -b $BRANCH --single-branch $GIT_CLONE_URL

      - name: Build ISO
        working-directory: ./vyos-build
        run: |
          sudo make clean
          sudo ./build-vyos-image iso --architecture $ARCHITECTURE --build-by $BUILD_BY --build-type $BUILD_TYPE --version $VERSION-$(date +%Y%m%d%H%M) --vyos-mirror $VYOS_MIRROR

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso
          path: vyos-build/build/vyos-${{ env.VERSION }}-*.iso

  release:
    needs: build_amd64
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso
          path: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          asset=$(find ./vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso/ -name "vyos-${{ env.VERSION }}-*.iso" | xargs)
          tag_name="v${{ env.VERSION }}"
          gh release upload "$tag_name" "$asset"
  notificate:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Send Discord notification
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: 'failed to build vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso'
