name: VyOS v1.5 Rolling Release ARM test

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  GIT_CLONE_URL: https://github.com/vyos/vyos-build
  BRANCH: current
  ARCHITECTURE: amd64
  BUILD_BY: vyos-build-action@github.com
  BUILD_TYPE: release
  VERSION: 1.5-rolling
  DEBIAN_MIRROR: https://mirrors.xtom.jp/debian/
  VYOS_MIRROR: https://rolling-packages.vyos.net/current/

jobs:
  test_arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Add Buildx
        uses: docker/setup-buildx-action@v2
      - name: Add qemu
        uses: docker/setup-qemu-action@v2
      - name: CheckOut
        uses: actions/checkout@v4.1.1
      - name: build and test
        run: |
          uname -a
          docker run --platform linux/arm64/v8 -i -v $PWD:/ws ubuntu:22.04 bash << EOF
            uname -a
            dpkg --print-architecture
            apt-get update
            apt-get install ca-certificates curl git sudo -y
            sudo install -m 0755 -d /etc/apt/keyrings
            sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc
            echo \
              "deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
              jammy stable" | \
              sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
            sudo docker version
            git clone -b $BRANCH --single-branch $GIT_CLONE_URL vyos-build-test-arm64
            cd vyos-build-test-arm64
            sudo docker build -t vyos/vyos-build:current docker
            sudo docker run --platform linux/arm64 --rm -it --privileged -v $(pwd):/vyos -w /vyos vyos/vyos-build:current << EOF
              sudo make clean
              sudo --preserve-env ./build-vyos-image --architecture arm64 --build-by $BUILD_BY --vyos-mirror $VYOS_MIRROR --debian-mirror $DEBIAN_MIRROR --build-type $BUILD_TYPE --custom-package vyos-1x-smoketest --version "${VERSION}" iso
              sudo make test
              sudo make testc
            EOF
          EOF
      - name: clone
        run: |
          git clone -b $BRANCH --single-branch $GIT_CLONE_URL vyos-build-test-arm64
      - name: build iso
        run: |
          docker run --platform linux/arm64 --rm --privileged -v ./vyos-build-test-arm64/:/vyos -w /vyos ghcr.io/ragujp/vyos-build-actions:current sudo --preserve-env ./build-vyos-image --architecture arm64 --build-by $BUILD_BY --vyos-mirror $VYOS_MIRROR --debian-mirror $DEBIAN_MIRROR --build-type $BUILD_TYPE --custom-package vyos-1x-smoketest --version "${VERSION}" iso
      # - name: please test arm64 images
      #   run: |
      #     echo "please test arm64 images"
      #     ls ./vyos-build-test-arm64/build/
      #     cp ./vyos-build-test-arm64/build/live-image-arm64.hybrid.iso ./vyos-build-test-arm64/build/live-image-amd64.hybrid.iso
      - name: Test iso
        run: |
          docker run --platform linux/arm64 --rm --privileged -v ./vyos-build-test-arm64/:/vyos -w /vyos ghcr.io/ragujp/vyos-build-actions:current sudo make test
          docker run --platform linux/arm64 --rm --privileged -v ./vyos-build-test-arm64/:/vyos -w /vyos ghcr.io/ragujp/vyos-build-actions:current sudo make testc

  build_arm64:
    needs: test_arm64
    runs-on: ubuntu-latest
    steps:
      - name: Clone source code
        run: git clone -b $BRANCH --single-branch $GIT_CLONE_URL

      - name: Build ISO
        run: |
          docker run --rm --platform linux/arm64 --privileged -v ./vyos-build/:/vyos -w /vyos ghcr.io/ragujp/vyos-build-actions:current sudo --preserve-env ./build-vyos-image --architecture arm64 --build-by $BUILD_BY --vyos-mirror $VYOS_MIRROR --debian-mirror $DEBIAN_MIRROR --build-type $BUILD_TYPE --version $VERSION-$(date +%Y%m%d%H%M) iso

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: vyos-${{ env.VERSION }}-arm64-iso
          path: vyos-build/build/vyos-${{ env.VERSION }}-*.iso

  release:
    needs: [build_arm64]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          path: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          asset_amd64=$(find ./vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso/ -name "vyos-${{ env.VERSION }}-*.iso" | xargs)
          tag_name="v${{ env.VERSION }}"
          gh release upload "$tag_name" "$asset_amd64"
  notificate:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Send Discord notification
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: 'failed to build vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso'
